{
  "Name": "Scaffolder",
  "Version": "1.1.0",
  "Applications": {
    "Agt.Concurso.Drh.Perfil": {
      "AppPath": "/mnt/F868BF7668BF326C/dev/agt/dotnet/Agt.Concurso.Drh/Agt.Concurso.Drh.Perfil",
      "Scaffolders": {
        "Models": [
          {
            "DbModels": "Agt.Concurso.Drh.Perfil.Service/Models"
          }
        ],
        "Controller": [
          {
            "Trailer": "Controller",
            "Output": "Agt.Concurso.Drh.Perfil.Api/Controllers",
            "Template": "controller.tmp"
          }
        ],
        "Service": [
          {
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.Perfil.Service/Services/Implementations",
            "Template": "service.tmp"
          },
          {
            "Header": "I",
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.Perfil.Service/Services/Interfaces",
            "Template": "iservice.tmp"
          }
        ],
        "ViewModel": [
          {
            "Trailer": "Dto",
            "Output": "Agt.Concurso.Drh.Perfil.Service/Dto",
            "Namespace": "Agt.Concurso.Drh.Perfil.Service.Dto",
            "Replacers": [
              {
                "CurrentValue": "BaseEntity",
                "NewValue": "BaseDto"
              }
            ]
          }
        ],
        "EFCore": [
          {
            "Trailer": "Config",
            "Output": "Agt.Concurso.Drh.Perfil.Service/Data",
            "Template": "efconfig.tmp",
            "Builders": {
              "Property": "builder.Property(e => e.@-Name-@).HasColumnName(nameof(@-Model-@.@-Name-@).ToUpperSnakeCase()).IsRequired();",
              "Relation:One": "builder.HasOne(e => e.@-Relation-@).WithMany(e => e.@-Model-@s).HasForeignKey(e => e.@-Relation-@Id).OnDelete(DeleteBehavior.NoAction);"
            }
          }
        ]
      }
    },
    "Agt.Concurso.Drh.Concurso": {
      "AppPath": "/mnt/F868BF7668BF326C/dev/agt/dotnet/Agt.Concurso.Drh/Agt.Concurso.Drh.Concurso",
      "Scaffolders": {
        "Models": [
          {
            "DbModels": "Agt.Concurso.Drh.Concurso.Service/Models"
          }
        ],
        "Controller": [
          {
            "Trailer": "Controller",
            "Output": "Agt.Concurso.Drh.Concurso.Api/Controllers",
            "Template": "controller.tmp"
          }
        ],
        "Service": [
          {
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.Concurso.Service/Services/Implementations",
            "Template": "service.tmp"
          },
          {
            "Header": "I",
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.Concurso.Service/Services/Interfaces",
            "Template": "iservice.tmp"
          }
        ],
        "ViewModel": [
          {
            "Trailer": "Dto",
            "Output": "Agt.Concurso.Drh.Concurso.Service/Dto",
            "Namespace": "Agt.Concurso.Drh.Concurso.Service.Dto",
            "Replacers": [
              {
                "CurrentValue": "BaseEntity",
                "NewValue": "BaseDto"
              }
            ]
          }
        ],
        "EFCore": [
          {
            "Trailer": "Config",
            "Output": "Agt.Concurso.Drh.Concurso.Service/Data",
            "Template": "efconfig.tmp",
            "Builders": {
              "Property": "builder.Property(e => e.@-Name-@).HasColumnName(nameof(@-Model-@.@-Name-@).ToUpperSnakeCase()).IsRequired();",
              "Relation:One": "builder.HasOne(e => e.@-Relation-@).WithMany(e => e.@-Model-@s).HasForeignKey(e => e.@-Relation-@Id).OnDelete(DeleteBehavior.NoAction);"
            }
          }
        ]
      }
    },
    "Agt.Concurso.Drh.TesteApuramento": {
      "AppPath": "/mnt/F868BF7668BF326C/dev/agt/dotnet/Agt.Concurso.Drh/Agt.Concurso.Drh.TesteApuramento",
      "Scaffolders": {
        "Models": [
          {
            "DbModels": "Agt.Concurso.Drh.TesteApuramento.Service/Models"
          }
        ],
        "Controller": [
          {
            "Trailer": "Controller",
            "Output": "Agt.Concurso.Drh.TesteApuramento.Api/Controllers",
            "Template": "controller.tmp"
          }
        ],
        "Service": [
          {
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.TesteApuramento.Service/Services/Implementations",
            "Template": "service.tmp"
          },
          {
            "Header": "I",
            "Trailer": "Service",
            "Output": "Agt.Concurso.Drh.TesteApuramento.Service/Services/Interfaces",
            "Template": "iservice.tmp"
          }
        ],
        "ViewModel": [
          {
            "Trailer": "Dto",
            "Output": "Agt.Concurso.Drh.TesteApuramento.Service/Dto",
            "Namespace": "Agt.Concurso.Drh.TesteApuramento.Service.Dto",
            "Replacers": [
              {
                "CurrentValue": "BaseEntity",
                "NewValue": "BaseDto"
              }
            ]
          }
        ],
        "EFCore": [
          {
            "Trailer": "Config",
            "Output": "Agt.Concurso.Drh.TesteApuramento.Service/Data",
            "Template": "efconfig.tmp",
            "Builders": {
              "Property": "builder.Property(e => e.@-Name-@).HasColumnName(nameof(@-Model-@.@-Name-@).ToUpperSnakeCase()).IsRequired();",
              "Relation:One": "builder.HasOne(e => e.@-Relation-@).WithMany(e => e.@-Model-@s).HasForeignKey(e => e.@-Relation-@Id).OnDelete(DeleteBehavior.NoAction);"
            }
          }
        ]
      }
    }
  },
  "SelectedProject": null
}